[versions]

# platforms
java = "17"
mindustry = "v146"

# logging
slf4j = "2.0.17"
slf4md = "1.0.1"

# command
cloud = "2.0.0"

# utilities
immutables = "2.10.1"
configurate = "4.1.2"
geantyref = "2.0.1"

# testing
junit = "5.12.0"
assertj = "3.27.3"
guava-testlib = "33.4.0-jre"
mockito = "5.16.0"

# static analysis
errorprone-gradle = "4.1.0"
errorprone-core = "2.36.0"
nullaway = "0.12.4"
checker-qual = "3.48.3"

# linting
palantir = "2.56.0"
ktlint = "1.5.0"

# gradle
toxopid = "4.1.2"
indra = "3.1.3"
spotless = "7.0.2"
shadow = "8.3.6"

[libraries]

# mindustry
mindustry-core = { module = "com.github.Anuken.Mindustry:core", version.ref = "mindustry" }
mindustry-server = { module = "com.github.Anuken.Mindustry:server", version.ref = "mindustry" }
arc-core = { module = "com.github.Anuken.Arc:arc-core", version.ref = "mindustry" }
arc-backend-headless = { module = "com.github.Anuken.Arc:backend-headless", version.ref = "mindustry" }

# logging
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }

# command
cloud-core = { module = "org.incendo:cloud-core", version.ref = "cloud" }

# utilities
immutables-processor = { module = "org.immutables:value-processor", version.ref = "immutables" }
immutables-annotations = { module = "org.immutables:value-annotations", version.ref = "immutables" }
configurate-core = { module = "org.spongepowered:configurate-core", version.ref = "configurate" }
configurate-yaml = { module = "org.spongepowered:configurate-yaml", version.ref = "configurate" }
geantyref = { module = "io.leangen.geantyref:geantyref", version.ref = "geantyref" }

# testing
junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
junit-engine-jupiter = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-engine-vintage = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
guava-testlib = { module = "com.google.guava:guava-testlib", version.ref = "guava-testlib" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }

# static analysis
errorprone-gradle = { module = "net.ltgt.gradle:gradle-errorprone-plugin", version.ref = "errorprone-gradle" }
errorprone-core = { module = "com.google.errorprone:error_prone_core", version.ref = "errorprone-core" }
nullaway = { module = "com.uber.nullaway:nullaway", version.ref = "nullaway" }
checker-qual = { module = "org.checkerframework:checker-qual", version.ref = "checker-qual" }

# gradle
toxopid = { module = "com.xpdustry:toxopid", version.ref = "toxopid" }
indra-common = { module = "net.kyori:indra-common", version.ref = "indra" }
indra-licenser-spotless = { module = "net.kyori:indra-licenser-spotless", version.ref = "indra" }
spotless = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
shadow = { module = "com.gradleup.shadow:shadow-gradle-plugin", version.ref = "shadow" }

[bundles]
indra = [ "indra-common", "indra-licenser-spotless" ]
mindustry = [ "mindustry-core", "mindustry-server", "arc-core", "arc-backend-headless" ]
test-lib = [ "junit-api", "junit-params", "assertj-core", "guava-testlib", "mockito-core", "mockito-junit-jupiter" ]
test-engine = [ "junit-engine-jupiter", "junit-engine-vintage", "junit-platform-launcher" ]
